facet_grid(clean_test~.)
ggplotly(g)
runApp()
runApp()
modified_data <- year(movie.data)
View(modified_data)
modified_data <- year(movie.data)
modified_data <- year(movie.data)
View(modified_data)
test <- yearly_data(2013)
View(test)
yearly_data <- function(input.year) {
pass_or_fail <- yearly_dataset %>%
filter(year == input.year) %>%
summarise(year = input.year, FAIL = sum(binary == "FAIL"), PASS = sum(binary == "PASS"),
total = length(binary))
return(pass_or_fail)
}
test <- yearly_data(2013)
View(test)
modified_data <- year(movie.data)
View(modified_data)
runApp()
modified_data[, "PASS"]
runApp()
test <- year(bechdel_data_raw)
View(test)
modified_data <- year(movie.data)
modified_data <- modified_data %>%
filter(year >= input$slider[1] & year <= input$slider[2]) %>%
mutate(pass_ratio = PASS / total)
p <- plot_ly(x = modified_data$year, y = (modified_data[, input$button] / modified_data$total),
type = "scatter", mode = "lines", color = modified_data$pass_ratio,
name = input$button) %>%
layout(title = paste(input$button,"rate from 1970 to 2013"))
return(p)
runApp()
shiny::runApp()
runApp()
View(joined.movie.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(new_data)
runApp()
library(dplyr)
library(ggplot2)
library(plotly)
library(Hmisc)
#prepare data for page 3
#this is the data from fivethirtyeight
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
#trying to get yearly data using year function
source('./script/year.R')
year_data <- year(bechdel_data_raw)
#this is the final dataset
new_data <- read.csv('./bechdel_data/final_joined_bechdel_data.csv')
#profitBechdelAssessment.R
source('./script/profitBechdelAssessment.R')
shinyUI(shinyUI(fluidPage(theme = "style.css",
headerPanel(
tags$h1("What Affects Passing Bechdel Test?")
),
tabsetPanel(
library(dplyr)
library(ggplot2)
library(plotly)
library(Hmisc)
#prepare data for page 3
#this is the data from fivethirtyeight
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
#trying to get yearly data using year function
source('./script/year.R')
year_data <- year(bechdel_data_raw)
#this is the final dataset
new_data <- read.csv('./bechdel_data/final_joined_bechdel_data.csv')
#profitBechdelAssessment.R
source('./script/profitBechdelAssessment.R')
View(new_data)
bechdel <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
new_data <- read.csv('./bechdel_data/final_joined_bechdel_data.csv')
full_data <- read.csv('./bechdel_data/final_joined_bechdel_data.csv')
View(full_data)
country.data <- filter(full_data, full_data$country, full_data$binary)
country.data <- filter(full_data, full_data$country, full_data$binary)
country.data <- filter(full_data, full_data$country & full_data$binary)
country.data <- filter(full_data, country, binary)
country.data <- filter(full_data, full_data$country, full_data$binary)
library(dplyr)
bechdel <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
full_data <- read.csv('./bechdel_data/final_joined_bechdel_data.csv')
country.data <- filter(full_data, full_data$country, full_data$binary)
View(country.data)
country.data <- select(full_data, full_data$country, full_data$binary)
country.data <- select(full_data, country, data$binary)
country.data <- select(full_data, country, binary)
View(country.data)
my.data.year <- country.data %>% group_by(country) %>% summarise(sum(binary == "TRUE"))
View(my.data.year)
my.data.year <- country.data %>% group_by(country) %>% summarise(sum(binary == "PASS"))
View(my.data.year)
my.data.year <- country.data %>% group_by(country) %>% summarise(sum(binary == "PASS")) %>%
mutate(summarise(sum(binary == "FALSE")))
my.data.year <- country.data %>% group_by(country) %>% summarise(sum(binary == "PASS"), sum(binary == "FAIL"))
View(my.data.year)
my.data.year <- country.data %>% group_by(country) %>% summarise("Number passed" = sum(binary == "PASS"), Number Failed = sum(binary == "FAIL"))
my.data.year <- country.data %>% group_by(country) %>% summarise("Number passed" = sum(binary == "PASS"), "Number Failed" = sum(binary == "FAIL"))
VIew(my.data.year)
View(my.data.year)
my.data.year <- country.data %>% group_by(country) %>% summarise("Number.passed" = sum(binary == "PASS"),
"Number.failed" = sum(binary == "FAIL"))
my.data.year <- mutate(my.data.year, "Passage Ratio" = Number.passed/(Number.passed + Number.failed))
View(my.data.year)
my.data.year <- mutate(my.data.year, "number.movies" = number.passed + number.failed)
my.data.year <- mutate(my.data.year, "passage.rate" = number.passed/(number.passed + number.failed))
my.data.year <- mutate(my.data.year, "passage.rate" = number.passed/(number.passed + number.failed))
my.data.year <- mutate(my.data.year, "number.movies" = number.passed + number.failed)
my.data.year <- country.data %>% group_by(country) %>% summarise("number.passed" = sum(binary == "PASS"),
"number.failed" = sum(binary == "FAIL"))
my.data.year <- mutate(my.data.year, "passage.rate" = number.passed/(number.passed + number.failed))
my.data.year <- mutate(my.data.year, "number.movies" = number.passed + number.failed)
View(my.data.year)
my.data.year
View(my.data.year)
View(full_data)
shiny::runApp()
library(shiny)
full_data <- read.csv("./bechdel_data/final_joined_bechdel_data.csv")
country.data <- select(full_data, country, binary)
runApp()
install.packages('shinythemes')
trace1 <- list(
z = my.data.year$passage.rate,
autocolorscale = FALSE,
colorbar = list(title = "Sales FIgures"),
colorscale = list(c(0.0, "rgb(68,94,150)"),list(0.2, "rgb(186,58,51)"),list(0.4, "rgb(186,58,51)"),list(0.6, "rgb(68,94,150)"),list(0.8, "rgb(187, 170, 144)"),list(1.0, "rgb(187, 170, 144)")),
locations = c("AFG", "ALA", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BIH", "BWA", "BVT", "BRA", "VGB", "IOT", "BRN", "BGR", "BFA", "BDI", "KHM", "CMR", "CAN", "CPV", "CYM", "CAF", "TCD", "CHL", "CHN", "HKG", "MAC", "CXR", "CCK", "COL", "COM", "COG", "COD", "COK", "CRI", "CIV", "HRV", "CUB", "CYP", "CZE", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MKD", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "ANT", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "REU", "ROU", "RUS", "RWA", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWZ", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "USA", "UMI", "URY", "UZB", "VUT", "VEN", "VNM", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE"),
marker = list(line = list(
color = "rgb(180,180,180)",
width = 0.5
)),
reversescale = FALSE,
type = "choropleth",
zmin = 0
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(dplyr)
library(shiny)
bechdel <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
full_data <- read.csv("./bechdel_data/final_joined_bechdel_data.csv")
country.data <- select(full_data, country, binary)
my.data.year <- country.data %>% group_by(country) %>% summarise("number.passed" = sum(binary == "PASS"),
"number.failed" = sum(binary == "FAIL"))
my.data.year <- mutate(my.data.year, "passage.rate" = number.passed/(number.passed + number.failed))
my.data.year <- mutate(my.data.year, "number.movies" = number.passed + number.failed)
library(plotly)
layout <- list(
geo = list(
projection = list(type = "Mercator"),
showcoastlines = FALSE,
showframe = FALSE
),
title = "World Map"
)
p <- plot_ly()
p <- add_trace(p, z=trace1$z, autocolorscale=trace1$autocolorscale, colorbar=trace1$colorbar, colorscale=trace1$colorscale, locations=trace1$locations, marker=trace1$marker, reversescale=trace1$reversescale, type=trace1$type, zmin=trace1$zmin)
p <- layout(p, geo=layout$geo, title=layout$title)
p
p
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p
trace1 <- list(
z = my.data.year$passage.rate,
autocolorscale = TRUE,
colorbar = list(title = "Movie Map"),
#colorscale = #list(c(0.1, "rgb(68,94,150)"),list(0.2, "rgb(186,58,51)"),list(0.3, "rgb(186,58,51)"),list(0.37, "rgb(68,94,150)"),
#                   list(0.42, "rgb(170, 150, 144)"),list(.48, "rgb(187, 150, 124)"), list(.53, "rgb(187, 150, 144)")), list(.7, "rgb(190, 170, 164)")),
locations = my.data.year$country,
marker = list(line = list(
color = "rgb(180,180,180)",
width = 0.5
)),
reversescale = FALSE,
type = "choropleth",
zmin = 0
)
p
View(p)
source('~/.active-rstudio-document', echo=TRUE)
p
View(my.data.year)
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
z
my.data.year$passage.rate
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
passage.rate
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.Trash/Info201GroupProj/script/countrygraph.R', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
p
z
my.data.year <- mutate(my.data.year, "number.movies" = number.passed + number.failed)
trace1 <- list(
z = my.data.year$passage.rate,
autocolorscale = FALSE,
colorbar = list(title = "Movie Map"),
colorscale = list(c(0.0, "rgb(68,94,150)"),list(0.2, "rgb(186,58,51)"),list(0.3, "rgb(186,58,51)"),
list(0.4, "rgb(68,94,150)"),list(0.45, "rgb(80, 100, 160)"),list(.5, "rgb(90, 100, 170)"),
list(.5, "rgb(110, 100, 180)"), list(.6, "rgb(187, 170, 144)"), list(.7, "rgb(188,189,220)"),
list(.8, "rgb(218,218,235)"), list(1.0, "rgb(242,240,247)")),
locations =c("AFG", "ALA", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW",
"AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN",
"BOL", "BIH", "BWA", "BVT", "BRA", "VGB", "IOT", "BRN", "BGR", "BFA", "BDI", "KHM", "CMR",
"CAN", "CPV", "CYM", "CAF", "TCD", "CHL", "CHN", "HKG", "MAC", "CXR", "CCK", "COL", "COM",
"COG", "COD", "COK", "CRI", "CIV", "HRV", "CUB", "CYP", "CZE", "DNK", "DJI", "DMA", "DOM",
"ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF",
"PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM",
"GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HUN", "ISL", "IND", "IDN",
"IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR",
"PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX",
"MKD", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX",
"FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD",
"ANT", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW",
"PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "REU", "ROU",
"RUS", "RWA", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU",
"SEN", "SRB", "SYC", "SLE", "SGP", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP",
"LKA", "SDN", "SUR", "SJM", "SWZ", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS",
"TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UK" ="UKR", "ARE", "GBR",
"USA", "UMI", "URY", "UZB", "VUT", "VEN", "VNM", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE"),
marker = list(line = list(
color = "rgb(180,180,180)",
width = 0.5
)),
reversescale = FALSE,
type = "choropleth",
zmin = 0
)
z
p
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
p
passage.rate
source('~/.active-rstudio-document', echo=TRUE)
p
my.data.year <- myData[-c(22), ]
my.data.year <- my.data.year[-c(22), ]
my.data.year
View(my.data.year)
my.data.year <- my.data.year[-c(31), ]
my.data.year
View(my.data.year)
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
View(my.data.year)
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
my.data.year <- my.data.year[-c(22), ] #remove "official site", cannot be mapped as location.
my.data.year <- my.data.year[-c(31), ] #remove west germany, no longer a representable country
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
View(my.data.year)
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
r
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/country.graph.trial.R', echo=TRUE)
p
runApp()
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source("./script/country.graph.trial.R")
source("../script/country.graph.trial.R")
source("/script/country.graph.trial.R")
setwd("~/Desktop/INFO 201/Info201GroupProj")
source("./script/country.graph.trial.R")
runApp()
runApp()
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.trial.R', echo=TRUE)
p
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.R', echo=TRUE)
p
runApp()
View(movie.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
source('~/Desktop/INFO 201/Info201GroupProj/script/country.graph.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
