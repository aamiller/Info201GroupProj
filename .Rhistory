1 == 1
!exists("s")
for(id in bechdel_data_raw$imdb) {
if (!exists("specific_movie_0")){
specific_movie_0 < -find_movie(id)
} else {
specific_movie <- find_movie(id)
merge(specific_movie_0, specific_movie)
}
}
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv")
if (!exists("specific_movie_0")){
specific_movie_0 < -find_movie(id)
}
specific_movie_0 < -find_movie(bechdel_data_raw$imdb[1])
specific_movie_first < -find_movie(bechdel_data_raw$imdb[1])
for(id in bechdel_data_raw$imdb) {
if (!exists("specific_movie_0")){
specific_movie_0 <-find_movie(id)
} else {
specific_movie <- find_movie(id)
merge(specific_movie_0, specific_movie)
}
}
source("./script/find_movie.R")
for(id in bechdel_data_raw$imdb) {
if (!exists("specific_movie_0")){
specific_movie_0 <-find_movie(id)
} else {
specific_movie <- find_movie(id)
merge(specific_movie_0, specific_movie)
}
}
View(specific_movie)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv")
source("./script/find_movie.R")
for(id in bechdel_data_raw$imdb) {
if (!exists("specific_movie_0")){
specific_movie_0 <-find_movie(id)
} else {
specific_movie <- find_movie(id)
merge(specific_movie_0, specific_movie)
}
}
View(bechdel_data_raw)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv")
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
result <- lapply(imbd_id, find_movie)
result <- lapply(imdb_id, find_movie)
result <- lapply(imdb_id, find_movie, na.rm = FALSE)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
result <- lapply(imdb_id, find_movie)
library(httr)
library(jsonlite)
library(dplyr)
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt0072308")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
View(result)
tt0072308
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt0069089")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt0069089")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
return (result)
}
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id)
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
return (result)
}
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
result <- lapply(imdb_id, find_movie)
```{r, include=FALSE}
#Anni: this is a dataset that using function find_movie to search movie info
#using imdb ids from bechdel data
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
result <- lapply(imdb_id, find_movie)
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id)
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
return (result)
}
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
result <- lapply(imdb_id, find_movie)
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id, apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
return (result)
}
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt3896198", apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
return (result)
}
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt3896198", apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id, apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
return (result)
}
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
find_movie(imbd_id[1])
find_movie(imdb_id[1])
library(dplyr)
sample <- select(imdb_id, year == 2013)
imdb_id <- bechdel_data_raw$imdb
sample <- select(imdb_id, year == "2013")
sample <- filter(bechdel_data_raw, year == "2013")
View(sample)
result <- lapply(sample$imdb, find_movie)
data_2013 <- data.frame(result)
data_2013 <- as.data.frame(result)
result
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt3896198", apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
View(result)
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Rating.Source, imdbRating, imdbVotes, imdbID, Production)
data <- result[1, ]
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Rating.Source, imdbRating, imdbVotes, imdbID, Production)
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
View(data)
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt3896198", apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
return (data)
}
result <- lapply(sample$imdb, find_movie)
data.frame(result_2013)
result_2013 <- lapply(sample$imdb, find_movie)
data.frame(result_2013)
result_2013_table <- data.frame(result_2013)
View(result_2013_table)
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id, apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
return (data)
}
result_2013 <- lapply(sample$imdb, find_movie)
result_2013_table <- data.frame(result_2013)
View(result_2013_table)
first <- find_movie(sample[1])
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt1711425", apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
View(data)
data <- data %>% select("Title", "Year", "Rated", "Genre", "Director", "Writer", "Actors", "Plot", "Language",
"Country", "Awards", "Ratings.Source", "imdbRating", "imdbVotes", "imdbID", "Production")
View(data)
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
imdb_id <- bechdel_data_raw$imdb
sample <- filter(bechdel_data_raw, year == "2013")
first <- find_movie(sample[1])
sample[1]
first <- find_movie(sample$imdb[1])
View(first)
for (id in sample$imdb) {
result_2013_table <- merge(first, find_movie(id))
}
View(result_2013_table)
result_2013_table <- find_movie(sample$imdb[1])
for (id in sample$imdb) {
result_2013_table <- merge(result_2013_table, find_movie(id))
}
for (id in sample$imdb) {
result_2013_table <- rbind(result_2013_table, find_movie(id))
}
View(result_2013_table)
result_2013_table <- data.frame(result_2013)
knitr::kable(result_2013_table)
View(result_2013_table)
for (id in sample$imdb) {
result_2013_table <- rbind(result_2013_table, find_movie(id))
}
library(dplyr)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
sample <- filter(bechdel_data_raw, year == "2013")
result_2013_table <- find_movie(sample$imdb[1])
for (id in sample$imdb) {
result_2013_table <- rbind(result_2013_table, find_movie(id))
}
View(result_2013_table)
for (id in sample$imdb) {
if (!exists("result_2013_table")) {
result_2013_table <- find_movie(sample$imdb[1])
} else {
result_2013_table <- rbind(result_2013_table, find_movie(id))
}
}
library(dplyr)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
sample <- filter(bechdel_data_raw, year == "2013")
for (id in sample$imdb) {
if (!exists("result_2013_table")) {
result_2013_table <- find_movie(sample$imdb[1])
} else {
result_2013_table <- rbind(result_2013_table, find_movie(id))
}
}
knitr::kable(result_2013_table)
years <- unique(bechdel_data_raw$year)
years <- unique(bechdel_data_raw$year)
for (year_given in years) {
sample <- filter(bechdel_data_raw, year == year_given)
for (id in sample$imdb) {
if (!exists("result_2013_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- rbind(result_table, find_movie(id))
}
}
paste(year_given, "table") <- result_table
}
for (year_given in years) {
sample <- filter(bechdel_data_raw, year == year_given)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- rbind(result_table, find_movie(id))
}
}
paste(year_given, "table") <- result_table
}
for (year_given in years) {
sample <- filter(bechdel_data_raw, year == year_given)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- rbind(result_table, find_movie(id))
}
}
assign(paste(year_given, "table"), result_table)
}
View(result_table)
View(`2013 table`)
View(`2013 table`)
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt1711425", apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
data <- data %>% select(contains(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production))
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = "tt1711425", apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
return (data)
}
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id, apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
return (data)
}
zz <- merge(find_movie(imdb_id[1]), find_movie(imdb_id[2]), all = TRUE)
zz[is.na(zz)] <- 0
View(zz)
zz <- merge(find_movie(imdb_id[1:50]), find_movie(imdb_id[51]), all = TRUE)
zz <- merge(find_movie(imdb_id[50]), find_movie(imdb_id[51]), all = TRUE)
zz[is.na(zz)] <- 0
zz <- merge(find_movie(imdb_id[200]), find_movie(imdb_id[51]), all = TRUE)
zz[is.na(zz)] <- 0
View(zz)
for (year_given in years) {
sample <- filter(bechdel_data_raw, year == year_given)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table) <- 0]
}
}
assign(paste(year_given, "table"), result_table)
}
library(dplyr)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
years <- unique(bechdel_data_raw$year)
for (year_given in years) {
sample <- filter(bechdel_data_raw, year == year_given)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table) <- 0]
}
}
assign(paste(year_given, "table"), result_table)
}
for (year_given in years) {
sample <- filter(bechdel_data_raw, year == year_given)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table)] <- 0
}
}
assign(paste(year_given, "table"), result_table)
}
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id, apikey="c53bd0e4")
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
#data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
# Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
return (data)
}
for (year_given in years) {
sample <- filter(bechdel_data_raw, year == year_given)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table)] <- 0
}
}
assign(paste(year_given, "table"), result_table)
}
View(`2013 table`)
sample <- filter(bechdel_data_raw, year == 2011)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table)] <- 0
}
}
assign(paste(year_given, "table"), result_table)
sample <- filter(bechdel_data_raw, year == 2008)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table)] <- 0
}
}
assign(paste(year_given, "table"), result_table)
sample <- filter(bechdel_data_raw, year == 2009)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table)] <- 0
}
}
View(`2011 table`)
sample <- filter(bechdel_data_raw, year == 2009)
View(sample)
sample <- filter(bechdel_data_raw, year == 2013)
```{r, include=FALSE}
library(dplyr)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source("./script/find_movie.R")
imdb_id <- bechdel_data_raw$imdb
years <- unique(bechdel_data_raw$year)
#for (year_given in years) {
sample <- filter(bechdel_data_raw, year == 2013)
for (id in sample$imdb) {
if (!exists("result_table")) {
result_table <- find_movie(sample$imdb[1])
} else {
result_table <- merge(result_table, find_movie(id), all = TRUE)
result_table[is.na(result_table)] <- 0
}
}
assign(paste(2013, "table"), result_table)
