name <- "Anni"
name
small_num <- min(3, 10, pi)
smallest.number <- small_num
install.packages("stringr")
library(stringr)
??stringr
clear
AddNumbers <- function(a, b)
answer <- a + b
return (answer)
AddNumbers(1, 2)
num <- AddNumbers(1, 2)
# Exercise 1: writing and executing functions
# Write a function `AddThree` that adds 3 to an input value
AddThree <- function(a){
number <- a + 3
return (number)
}
# Create a variable `ten` by passing 7 to your `AddThree` function
ten <- AddThree(7)
# Write a function `FeetToMeters` that converts from feet to meters
FeetToMeters <- function(a){
number <- a / 3
return (number)
}
# Create a variable `height.in.feet` that is your height in feet
height.in.feet <- 5.6
# Create a variable `height.in.meters` by passing `height.in.feet` to your `FeetToMeters` function
height.in.meters <- FeetToMeters(height.in.feet)
# Exercise 1: writing and executing functions
# Write a function `AddThree` that adds 3 to an input value
AddThree <- function(a){
number <- a + 3
return (number)
}
# Create a variable `ten` by passing 7 to your `AddThree` function
ten <- AddThree(7)
# Write a function `FeetToMeters` that converts from feet to meters
FeetToMeters <- function(a){
number <- a * 0.3
return (number)
}
# Create a variable `height.in.feet` that is your height in feet
height.in.feet <- 5.6
# Create a variable `height.in.meters` by passing `height.in.feet` to your `FeetToMeters` function
height.in.meters <- FeetToMeters(height.in.feet)
# Create a variable `ten` by passing 7 to your `AddThree` function
ten <- AddThree(7)
# Exercise-1: practice with basic syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- Ningbo
# Assign your name to the variable `my.name`
my.name <- "Anni"
# Assign your height to a variable `my.height`
my.height <- 5.6 ft
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 2
# Create a variable `puppy.price`, which is how expensive you think a puppy is
puppy.price <- 500
# Create a variable `total.cost` that has the total cost of all of your puppies
total.cost <- puppies * puppy.price
# Create a boolean variable `too.expensive`, set to true if the cost is greater than $1,000
too.expensive <- FALSE
# Create a variable `max.puppies`, which is the nuber of puppies you can afford for $1K.
max.puppies <- 1000 / total.cost
# Exercise 1: Creating and Indexing Vectors
# Create a vector `first.ten` that has the values 10 through 20 in it (using the : operator)
first.ten <- 10:20
# Create a vector `next.ten` that has the values 21 through 30 in it (using the seq operator)
next.ten <- 21:30
# Create a vector `all.numbers` by combining the vectors `first.ten` and `next.ten`
all.numbers <- first.ten + next.ten
# Create a variable `eleventh` that is equal to the 11th element in your vector `all.numbers`
eleventh <- all.numbers[11]
# Create a vector `some.numbers` that is equal to the second through the 5th elements of `all.numbers`
some.numbers <- all.numbers[5]
# Create a variable `len` that is equal to the length of your vector `all.numbers`
len <- length(all.numbers)
### Bonus ###
# Create a vector `odd` that holds the odd numbers from 1 to 100
num <- 1:100
odd <- num[c(TRUE:FALSE)]
# Using the `all` and `%%` operators, confirm that all of the numbers in your `odd` vector are odd
odd
num <- 1:100
odd <- num[TRUE:FALSE]
num[TRUE:FALSE]
actual.ice.cream <- ice.cream[is.ice.cream]
print ice.cream
print ice.cream[1]
actual.ice.cream <- ice.cream[is.ice.cream]
ice.cream <- 1
print (ice.cream)
ice.cream <- c("mint", "chocolate", "vanilla", "shoe", "strawberry", "table")
print (actual.ice.cream)
ice.cream <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
ice = 100
ice.cream <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
data.frame(ice.cream, price, size, calories)
ice.cream <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
data.frame(ice.cream, price, size, calories)
ice.cream <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
table <- data.frame(ice.cream, price, size, calories)
View(table)
ice.cream <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
table <- data.frame(ice.cream, price, size, calories, location)
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(ice.cream, price, size, calories, location)
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(ice.cream, price, size, calories, location)
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(ice.cream, price, size, calories, location)
View(ice.cream)
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location)
View(ice.cream)
View(ice.cream)
chocolate <- ice.cream[3, 1]
chocolate <- ice.cream[3, flavor]
chocolate <- ice.cream[3, "flavor"]
colnames(ice.cream)
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location)
View(ice.cream)
colnames(ice.cream)
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location, stringsAsFactors = FALSE)
View(ice.cream)
colnames(ice.cream)
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location, stringsAsFactors = FALSE)
View(ice.cream)
colnames(ice.cream)
names <- c("a", "b", "c", "d", "e")
colnames(ice.cream) <- names
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location, stringsAsFactors = FALSE)
View(ice.cream)
colnames(ice.cream)[2] <- "LOL"
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location, stringsAsFactors = FALSE)
View(ice.cream)
colnames(ice.cream)["flavor"] <- "LOL"
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location, stringsAsFactors = FALSE)
View(ice.cream)
colnames(ice.cream)[1] <- "LOL"
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location, stringsAsFactors = FALSE)
View(ice.cream)
colnames(ice.cream)[1] <- "LOL"
expensive <- ice.cream$flavor[max(ice.cream$price)]
flavor <- c("strawberry", "rocky road", "chocolate", "green tea")
price <- c(500, 350, 1000, 150)
size <- c("M", "L", "XS", "XL")
calories <- c(0, 1000, -10, 150)
location <- c("seattle", "montana")
ice.cream <- data.frame(flavor, price, size, calories, location, stringsAsFactors = FALSE)
View(ice.cream)
# colnames(ice.cream)[1] <- "LOL"
expensive <- ice.cream$flavor[ice.cream$price==max(ice.cream$price)]
install.packages("titanic")
titanic.dateset <- data(Titanic)
View(titanic.dateset)
shiny::runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
??tags$blockquote()
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
shiny::runApp('C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj')
movie.data <- read.csv("./bechdel_data/movies.csv", stringsAsFactors =  FALSE)
joined.movie.data <- read.csv("./bechdel_data/final_joined_bechdel_data.csv", stringsAsFactors = FALSE)
setwd("C:/Users/thinkpad/Desktop/info 201 exercises/Info201GroupProj")
movie.data <- read.csv("./bechdel_data/movies.csv", stringsAsFactors =  FALSE)
joined.movie.data <- read.csv("./bechdel_data/final_joined_bechdel_data.csv", stringsAsFactors = FALSE)
runApp()
source("./script/profitBechdelAssessment.R")
source("./script/genreAnalysisGraph.R")
source('./script/year.R')
source("./script/ratingBarGraph.R")
source("./script/country.graph.R")
source("./script/ActorData.R")
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
new_data <- read.csv('./bechdel_data/final_joined_bechdel_data.csv', stringsAsFactors = FALSE)
year_data <- year(bechdel_data_raw)
#install.packages("Hmisc")
library(dplyr)
library(ggplot2)
library(plotly)
library(Hmisc)
library(shiny)
library(shinythemes)
#reading data from fivethirtyeight
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
new_data <- read.csv('./bechdel_data/final_joined_bechdel_data.csv', stringsAsFactors = FALSE)
year_data <- year(bechdel_data_raw)
#sourcing functions in different file
source('./script/year.R')
source('./script/profitBechdelAssessment.R')
runApp()
runApp()
shiny::runApp()
shiny::runApp()
rsconnect::showLogs()
rsconnect::showLogs()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
