ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
library(ggplot2)
??imdbSeries
??imdb
library(imdb)
install.packages('imdb')
library(ggplot2movies)
install.packages('ggplot2movies')
??gplot2movies
all.movies <- movies
library(ggplot2movies)
all.movies <- movies
View(all.movies)
View(all.movies)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
setwd("~/Documents/School/2016-2017/Spring/INFO 201/Info201GroupProj")
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
View(bechdel_data_raw)
bechdel_set <- read.csv("./data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("./data/movie_metadata_tojoin.csv", stringsAsFactors = false)
setwd("~/Documents/School/2016-2017/Spring/INFO 201/Info201GroupProj")
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("./data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("./data/movie_metadata_tojoin.csv", stringsAsFactors = false)
set_to_join <- read.csv("./data/movie_metadata_tojoin.csv", stringsAsFactors = false)
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("./data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("./data/movie_metadata_tojoin.csv", stringsAsFactors = false)
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("/data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("/data/movie_metadata_tojoin.csv", stringsAsFactors = false)
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("/bechdel_data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("/bechdel_data/movie_metadata_tojoin.csv", stringsAsFactors = false)
library(httr)
library(jsonlite)
library(dplyr)
<<<<<<< HEAD
bechdel_set <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("./bechdel_data/movie_metadata_tojoin.csv", stringsAsFactors = false)
bechdel_set <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = false)
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("/bechdel_data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("/bechdel_data/movie_metadata_tojoin.csv", stringsAsFactors = false)
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("/bechdel_data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("/bechdel_data/movie_metadata_tojoin.csv", stringsAsFactors = false)
set_to_join <- read.csv("/bechdel_data/movie_metadata_tojoin.csv", stringsAsFactors = false)
setwd("~/Documents/School/2016-2017/Spring/INFO 201/Info201GroupProj")
setwd("~/Documents/School/2016-2017/Spring/INFO 201/Info201GroupProj/script")
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("/bechdel_data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("/bechdel_data/movie_metadata_tojoin.csv", stringsAsFactors = false)
library(httr)
library(jsonlite)
library(dplyr)
bechdel_set <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = false)
set_to_join <- read.csv("./bechdel_data/movie_metadata_tojoin.csv", stringsAsFactors = false)
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
setwd("~/Documents/School/2016-2017/Spring/INFO 201/Info201GroupProj")
=======
data <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
BuildScatter(data)
### Build Scatter ###
BuildScatter <- function(data.movies, xvar = 'budget', yvar = 'domgross') {
## Fix chr type columns
data.movies$domgross <- as.integer(as.character(data.movies$domgross))
data.movies$intgross <- as.integer(as.character(data.movies$intgross))
data.movies <- filter(data.movies, xvar != '#N/A', yvar != '#N/A')
# Get x and y max -- Code adapted from graph given in m18 exercise
xmax <- max(data.movies[,xvar]) * 1.1
ymax <- max(data.movies[,yvar]) * 1.1
x.equation <- paste0('~', xvar)
y.equation <- paste0('~', yvar)
plot_ly(data=data.movies, color = ~binary, colors = c("red", "green"),
x = eval(parse(text = x.equation)),
y = eval(parse(text = y.equation)),
mode = 'markers',
marker = list(
opacity = .4,
size = 2
)) %>%
layout(title = paste(FixAxisLabels(xvar), "Vs.", FixAxisLabels(yvar), "Bechdel Financial Analysis"), xaxis = list(range = c(0, xmax), title = FixAxisLabels(xvar)),
yaxis = list(range = c(0, ymax), title = FixAxisLabels(yvar))
) %>%
return()
}
# Fixes capitalization and short-hand names in the data set for display
FixAxisLabels <- function(input.var.name) {
print(input.var.name)
if (input.var.name == 'domgross') { input.var.name <- "Domestic Gross"}
if (input.var.name == "intgross") { input.var.name <- "International Gross"}
return(input.var.name)
}
shiny::runApp()
runApp()
runApp()
library(plotly)
#prepare data for page 3
bechdel_data_raw <- read.csv("./bechdel_data/movies.csv", stringsAsFactors = FALSE)
source('./script/year.R')
year_data <- year(bechdel_data_raw)
source('./script/profitBechdelAssessment.R')
shinyUI(shinyUI(navbarPage("Bechdel Test",
tabPanel("ADELE", titlePanel('Adjust Rating (PG-13, etc.) Affect Passing Rates?')),
tabPanel("ADELE", titlePanel('Does Profit or Budget Affect Passing Rates?'),
sidebarLayout(
# Side panel for controls
sidebarPanel(
# Input to select variable to map
selectInput('scatterVarX', label = 'Variable to Map to X Axis', choices = list('Budget' = 'budget', 'Domestic Gross' = 'domgross', 'International Gross' = 'intgross')),
selectInput('scatterVarY', label = 'Variable to Map to Y Axis', choices = list('Budget' = 'budget', 'Domestic Gross' = 'domgross', 'International Gross' = 'intgross'))
),
# Main panel: display plotly map
mainPanel(
plotlyOutput('profitBechdelAssessment'))
)
),
tabPanel("SHERRI", titlePanel('Does Budget Affect Passing Rates?')),
#tab page 3 by Anni
tabPanel("ANNI", titlePanel('Does Year Made Affect Passing Rates?'),
#page 3 side bar lay out
sidebarLayout(
#page 3 side bar panel
sidebarPanel(
#page 3 check box widget
sliderInput("slider1", label = h3("Slider"), min = year_data$year[44],
max = year_data$year[1], value = c(year_data$year[40], year_data$year[30]))
),
#page 3 main panel
mainPanel(
plotlyOutput('boxgraph')
)
)
)
)
#tabPanel("KEANAN", titlePanel('Does Genre Made Affect Passing Rates?'))
#YOU SHOULD MODIFY THIS FILE BY ADDING YOUR OUTPUT AFTER THE PAGE NAME LIKE THIS:
#tabPanel("Page 1", plotOutput("pg1")) <--I think.....? #
))
movie.data <- read.csv("./bechdel_data/movies.csv", stringsAsFactors =  FALSE)
View(movie.data)
source('./script/year.R')
modified_data <- year(movie.data)
View(modified_data)
modified_data <- modified_data %>%
filter(year >= input$slider[1] & year <= input$slider[2])
runApp()
runApp()
runApp()
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id, apikey='23e78b2d')
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
#data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
# Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
return (data)
}
find_movie("tt1711425")
library(httr)
library(jsonlite)
library(dplyr)
#find information about each movie by given id number
#example <- "http://www.omdbapi.com/?i=tt3896198&apikey=c53bd0e4"
find_movie <- function(id) {
base.uri <- "http://www.omdbapi.com/?"
query.param <- list(i = id)
response <- GET(base.uri, query = query.param)
body <- content(response, "text")
result <- as.data.frame(fromJSON(body))
data <- result[1, ]
#data <- data %>% select(Title, Year, Rated, Genre, Director, Writer, Actors, Plot, Language,
# Country, Awards, Ratings.Source, imdbRating, imdbVotes, imdbID, Production)
return (data)
}
find_movie("tt1711425")
runApp()
runApp()
runApp()
>>>>>>> b5f96e23ba3bee300bc460098a73bec91791ef52
joined.movie.data <- read.csv("./bechdel_data/final_joined_bechdel_data.csv", stringsAsFactors = FALSE)
shiny::runApp()
View(joined.movie.data)
runApp()
runApp()
runApp()
g <- ggplot(joined.movie.data, aes(clean_test, binary)) +
geom_label(aes(label = clean_test))
g
group_failed_test <- joined.movie.data %>%
group_by(clean_test) %>%
summarise(test_result = clean_test, num = n())
group_failed_test <- joined.movie.data %>%
group_by(clean_test) %>%
summarise(num = n())
View(group_failed_test)
group_failed_test <- joined.movie.data %>%
group_by(clean_test) %>%
summarise(num = n(), result = binary)
group_failed_test <- movie.data %>%
group_by(clean_test) %>%
summarise(num = n(), result = binary)
group_failed_test <- movie.data %>%
group_by(clean_test) %>%
summarise(num = n())
movie.data <- read.csv("./bechdel_data/movies.csv", stringsAsFactors =  FALSE)
group_failed_test <- movie.data %>%
group_by(clean_test) %>%
summarise(num = n())
View(movie.data)
g <- ggplot(movie.data) +
geom_point() +
facet_grid(budget~year)
ggplot(movie.data) +
geom_point() +
facet_grid(budget~year)
ggplot(movie.data, aes(budget, year)) +
geom_point() +
facet_grid(budget~year)
ggplot(movie.data, aes(budget, year)) +
geom_point() +
facet_grid(clean_test)
colnames(movie.data)
runApp()
ggplot(movie.data, aes(budget, year)) +
geom_point() +
facet_grid(clean_test~.)
ggplot(movie.data, aes(budget, year)) +
geom_point() +
facet_grid(clean_test~binary)
ggplot(movie.data, aes(year, budget)) +
geom_point() +
facet_grid(clean_test~binary)
ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point() +
facet_grid(clean_test~binary)
ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point() +
facet_grid(clean_test~binary) +
scale_fill_brewer(palette = "Blues")
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score)) +
facet_grid(clean_test~binary)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score), color = imdb_score) +
facet_grid(clean_test~binary)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = imdb_score)) +
facet_grid(clean_test~binary)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary)) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary), alpha = 0.5) +
facet_grid(clean_test~.)
joined.movie.data$budget.x
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary, size = budget.x), alpha = 0.5) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary, size = budget.x), alpha = 0.1) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary, size = budget.x), alpha = 0.2) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary, size = country), alpha = 0.2) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = country, size = binary), alpha = 0.2) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = content_rating, size = binary), alpha = 0.2) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary), alpha = 0.2) +
facet_grid(clean_test~.)
ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary, text = title), alpha = 0.2) +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary), alpha = 0.5) +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplotly(g)
g <- ggplotly(g)
g
g <- ggplot(joined.movie.data) +
geom_point(mapping = aes(year, imdb_score, color = binary), alpha = 0.5, text = title) +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary, text = "hi"), alpha = 0.5) +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary, text = name), alpha = 0.5, name = "title") +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary, text = name), alpha = 0.5, name = title) +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary, label = title), alpha = 0.5) +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary), alpha = 0.5) +
labs(title = "Test Results of movies from 1970 - 2013") +
facet_grid(clean_test~.)
g <- ggplotly(g) %>%
layout(titile = "Test Results of movies from 1970 - 2013",
xaxis = list(title = title),
yaxis = list(title = context.rating))
g <- ggplotly(g) %>%
layout(titile = "Test Results of movies from 1970 - 2013",
xaxis = list(title = title),
yaxis = list(title = context_rating))
g <- ggplotly(g) %>%
layout(titile = "Test Results of movies from 1970 - 2013",
xaxis = list(title = title),
yaxis = list(title = content_rating))
g <- ggplotly(g) %>%
layout(titile = "Test Results of movies from 1970 - 2013",
xaxis = list(title = title),
yaxis = list()
)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary), alpha = 0.5) +
facet_grid(clean_test~.)
ggplotly(g) %>%
layout(titile = "Test Results of movies from 1970 - 2013",
xaxis = list(title = title),
yaxis = list()
)
ggplotly(g) %>%
layout(titile = "Test Results of movies from 1970 - 2013",
xaxis = list(title = title),
yaxis = list()
)
devtools::install_github('hadley/ggplot2')
devtools::install_github('hadley/ggplot2')
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary), alpha = 0.5) +
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary), alpha = 0.5) +
geom_smooth(aes(color = binary))
facet_grid(clean_test~.)
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary), alpha = 0.5) +
geom_smooth(aes(color = binary)) +
facet_grid(clean_test~.)
g
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = binary), alpha = 0.5) +
facet_grid(clean_test~.)
g
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
g
group_failed_test <- joined.movie.data %>%
filter(clean_test != "ok")
group_by(clean_test) %>%
summarise(num = n())
g <- ggplot(joined.movie.data, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
g
View(group_failed_test)
group_failed_test <- joined.movie.data %>%
filter(clean_test != "ok")
group_by(clean_test) %>%
summarise(num = n())
group_failed_test <- joined.movie.data %>%
filter(clean_test != "ok")
g <- ggplot(group_failed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
g
ggplot(group_failed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating, size = budget.x), alpha = 0.5) +
facet_grid(clean_test~.)
g <- ggplot(group_failed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
group_passed_test <- joined.movie.data %>%
filter(clean_test == "ok")
g2 <- ggplot(group_passed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
ggplotly(g2)
g2 <- ggplot(group_passed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5)
ggplotly(g2)
ggplot(group_passed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating, text = title), alpha = 0.5)
ggplotly(g)
g <- ggplot(group_failed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
ggplotly(g)
g <- ggplot(group_failed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(.~clean_test)
ggplotly(g)
g <- ggplot(group_failed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
ggplotly(g)
runApp()
runApp()
runApp()
group_failed_test <- joined.movie.data %>%
filter(binary == "PASS")
g <- ggplot(group_failed_test, aes(year, imdb_score)) +
geom_point(aes(color = content_rating), alpha = 0.5) +
facet_grid(clean_test~.)
ggplotly(g)
runApp()
runApp()
modified_data <- year(movie.data)
View(modified_data)
modified_data <- year(movie.data)
modified_data <- year(movie.data)
View(modified_data)
test <- yearly_data(2013)
View(test)
yearly_data <- function(input.year) {
pass_or_fail <- yearly_dataset %>%
filter(year == input.year) %>%
summarise(year = input.year, FAIL = sum(binary == "FAIL"), PASS = sum(binary == "PASS"),
total = length(binary))
return(pass_or_fail)
}
test <- yearly_data(2013)
View(test)
modified_data <- year(movie.data)
View(modified_data)
runApp()
modified_data[, "PASS"]
runApp()
test <- year(bechdel_data_raw)
View(test)
modified_data <- year(movie.data)
modified_data <- modified_data %>%
filter(year >= input$slider[1] & year <= input$slider[2]) %>%
mutate(pass_ratio = PASS / total)
p <- plot_ly(x = modified_data$year, y = (modified_data[, input$button] / modified_data$total),
type = "scatter", mode = "lines", color = modified_data$pass_ratio,
name = input$button) %>%
layout(title = paste(input$button,"rate from 1970 to 2013"))
return(p)
runApp()
shiny::runApp()
runApp()
View(joined.movie.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('shinythemes')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
